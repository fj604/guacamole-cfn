{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "Create an EC2 instance of Apache Guacamole clientless remote desktop gateway",

    "Parameters": {
        "VpcId" : {
            "Type" : "AWS::EC2::VPC::Id",
            "Description" : "VpcId of your existing Virtual Private Cloud (VPC)",
            "ConstraintDescription" : "must be the VPC Id of an existing Virtual Private Cloud."
        },
        "SubnetId" : {
            "Type" : "AWS::EC2::Subnet::Id",
            "Description" : "Subnet ID in your Virtual Private Cloud (VPC)",
            "ConstraintDescription" : "must be an existing subnet in the selected VPC."
        },
        "InstanceType": {
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.micro",
                "t3.micro",
                "t3.small",
                "t3.medium",
                "t3.large",
                "c5.large"
            ],
            "Description": "Enter instance type"
        },
        "Keypair": {
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair.",
            "Description": "Key pair for the instance"
        },
        "LatestAmiId": {
            "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
            "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
        },
        "SSHLocation": {
            "Type": "String",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x.",
            "Description": "Allow SSH access from x.x.x.x/x",
            "MaxLength": "18",
            "MinLength": "9"
        },
        "HTTPSLocation": {
            "Type": "String",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x.",
            "Description": "Allow HTTPS access from x.x.x.x/x",
            "MaxLength": "18",
            "MinLength": "9"
        }
    },
    "Resources": {
        "Instance": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "configure-all": ["install-deps", "install-guacamole", "configure-nginx"]
                    },
                    "install-deps": {
                        "commands": {
                            "1-install-extras": {
                                "command": "amazon-linux-extras install -y epel tomcat8.5 nginx1"
                            }
                        }
                    },
                    "install-guacamole": {
                        "packages": {
                            "yum": {
                                "gcc": [],
                                "freerdp1.2-devel": [],
                                "cairo-devel": [],
                                "libjpeg-turbo-devel": [],
                                "libpng-devel": [],
                                "uuid-devel": [],
                                "freerdp-devel": [],
                                "pango-devel": [],
                                "libssh2-devel": [],
                                "libtelnet-devel": [],
                                "libvncserver-devel": [],
                                "pulseaudio-libs-devel": [],
                                "openssl-devel": [],
                                "libvorbis-devel": [],
                                "libwebp-devel": []
                            }
                        },
                        "sources": {
                            "/guacamole-server/": "https://www.apache.org/dist/guacamole/1.0.0/source/guacamole-server-1.0.0.tar.gz"
                        },
                        "files": {
                            "/var/lib/tomcat/webapps/guacamole.war": {
                                "source": "https://www.apache.org/dist/guacamole/1.0.0/binary/guacamole-1.0.0.war"
                            }
                        },
                        "commands": {
                            "1-configure": {
                                "command": "./configure --with-init-dir=/etc/init.d",
                                "cwd": "/guacamole-server/guacamole-server-1.0.0" 
                            },
                            "2-make": {
                                "command": "make",
                                "cwd": "/guacamole-server/guacamole-server-1.0.0" 
                            },
                            "3-make-install": {
                                "command": "make install",
                                "cwd": "/guacamole-server/guacamole-server-1.0.0"
                            },
                            "4-ldconfig": {
                                "command": "ldconfig",
                                "cwd": "/guacamole-server/guacamole-server-1.0.0"
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "guacd": {
                                    "enabled": "true",
                                    "ensureRunning" : "true"
                                },
                                "tomcat": {
                                    "enabled": "true",
                                    "ensureRunning" : "true"
                                }
                            }
                        }
                    },
                    "configure-nginx": {
                        "commands": {
                            "create-dummy-cert": {
                                "command": "./make-dummy-cert localhost.pem",
                                "cwd": "/etc/pki/tls/certs/"
                            }
                        },
                        "files": {
                            "/etc/nginx/conf.d/guacamole.conf": {
                                "content": { "Fn::Join": [ "\n", [
                                    "server {",
                                    "   listen       443 ssl http2 default_server;",
                                    "   server_name  localhost;",
                                    "   ssl_certificate      /etc/pki/tls/certs/localhost.pem;",
                                    "   ssl_certificate_key  /etc/pki/tls/certs/localhost.pem;",
                                    "       location / {",
                                    "           proxy_pass http://localhost:8080/guacamole/;",
                                    "           proxy_buffering off;",
                                    "           proxy_http_version 1.1;",
                                    "           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;",
                                    "           proxy_set_header Upgrade $http_upgrade;",
                                    "           proxy_set_header Connection $http_connection;",
                                    "           access_log off;",
                                    "       }",
                                    "}"
                                ] ] } 
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "nginx": {
                                    "enabled": "true",
                                    "ensureRunning" : "true"
                                }
                            }
                        }
                    }
                }
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": "PT10M"
                }
            },
            "Properties": {
                "ImageId": { "Ref": "LatestAmiId" },
                "InstanceType": { "Ref": "InstanceType" },
                "KeyName": { "Ref": "Keypair" },
                "SubnetId": { "Ref": "SubnetId" },
                "SecurityGroupIds": [
                    {
                        "Ref": "InstanceSecurityGroup"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash -xe",
                                "yum install -y aws-cfn-bootstrap",
                                {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "/opt/aws/bin/cfn-init -v -c configure-all",
                                            "--stack",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "--resource Instance",
                                            "--region",
                                            {
                                                "Ref": "AWS::Region"
                                            }
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "/opt/aws/bin/cfn-signal",
                                            "--stack",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            " --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "--resource Instance"
                                        ]
                                    ]
                                }
                            ]
                        ]
                    }
                }
            }
        },

        "InstanceSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable SSH access via port 22",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "SSHLocation"
                        },
                        "FromPort": 22,
                        "IpProtocol": "tcp",
                        "ToPort": 22
                    },
                    {
                        "CidrIp": {
                            "Ref": "HTTPSLocation"
                        },
                        "FromPort": 443,
                        "IpProtocol": "tcp",
                        "ToPort": 443
                    }
                ],
                "VpcId": { "Ref": "VpcId" }
            }
        }
    },

    "Outputs": {
        "InstanceId": {
            "Description": "Instance ID",
            "Value": { "Ref": "Instance" }
        },
        "PrivateIp": {
            "Description": "Public IP Address",
            "Value": { "Fn::GetAtt":[ "Instance", "PublicIp"] }
        }
    }
}